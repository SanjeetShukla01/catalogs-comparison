version: '3.8'

services:
  # Nessie Server
  nessie:
    image: projectnessie/nessie:latest
    container_name: nessie
    ports:
      - "19120:19120"
    environment:
      - QUARKUS_HTTP_PORT=19120
    networks:
      - nessie-spark-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19120/api/v1"]
      interval: 10s
      retries: 5

  # Spark with Iceberg Support
  spark:
    image: tabulario/spark-iceberg:latest
    container_name: spark
    command: bash -c "/opt/spark/sbin/start-master.sh && tail -f /dev/null"
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - nessie-spark-network
    depends_on:
      nessie:
        condition: service_healthy
    environment:
      - SPARK_MASTER_HOST=spark
      - SPARK_MASTER_PORT=7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - ICEBERG_CATALOG=nessie
      - ICEBERG_CATALOG_URI=http://nessie:19120/api/v1

  # Spark Worker
  spark-worker:
    image: tabulario/spark-iceberg:latest
    container_name: spark-worker
    command: bash -c "/opt/spark/sbin/start-worker.sh spark://spark:7077 && tail -f /dev/null"
    depends_on:
      - spark
    networks:
      - nessie-spark-network
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G

  # MinIO (S3-compatible storage for sample data)
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - nessie-spark-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001"]
      interval: 10s
      retries: 5

  # Jupyter Notebook for UI-based testing
  jupyter:
    image: jupyter/pyspark-notebook
    container_name: jupyter
    ports:
      - "8888:8888"
    networks:
      - nessie-spark-network
    volumes:
      - ./notebooks:/home/jovyan/work
    depends_on:
      - spark
    environment:
      - JUPYTER_ENABLE_LAB=yes

networks:
  nessie-spark-network:
    driver: bridge
